<? function philsXMLClean($strin){$strout=null;for($i=0;$i<strlen($strin);$i++){$ord=ord($strin[$i]);if(($ord>0&&$ord<32)||($ord>=127)){$strout.="&amp;#{$ord};";}else{switch($strin[$i]){case '<': $strout.='&lt;';break;case '>':	$strout.='&gt;';break;case '&': $strout.='&amp;';break;case '"':	$strout.='&quot;';break;default: $strout.=$strin[$i];}}}return $strout;}class XmlParser{var $xml;var $indent;var $stack=array();function XmlWriter($indent='  '){$this->indent=$indent;$this->xml='<?xml version="1.0" encoding="utf-8"?>'."\n";}function _indent(){for($i=0,$j=count($this->stack);$i<$j;$i++){$this->xml.=$this->indent;}}function push($element,$attributes=array()){$this->_indent();$this->xml.='<'.$element;foreach($attributes as $key => $value){$this->xml.=' '.$key.'="'.philsXMLClean(htmlentities($value)).'"';}$this->xml.=">\n";$this->stack[]=$element;}function element($element,$content,$attributes=array()){$this->_indent();$this->xml.='<'.$element;foreach($attributes as $key => $value){$this->xml.=' '.$key.'="'.philsXMLClean(htmlentities($value)).'"';}$this->xml.='>'.htmlentities($content).'</'.$element.'>'."\n";}function emptyelement($element,$attributes=array()){$this->_indent();$this->xml.='<'.$element;foreach ($attributes as $key=>$value){$this->xml.=' '.$key.'="'.htmlentities($value).'"';}$this->xml.=" />\n";}function pop(){$element = array_pop($this->stack);$this->_indent();$this->xml.="</$element>\n";}function getXml(){return $this->xml;}}
$xml=new XmlParser();if(!function_exists('scandirX')){function scandirX($dirname){global $xml;$dir=opendir($dirname);while(false!=($file=readdir($dir))){if(($file!=".")and($file !="..")){if(!is_dir($dirname.'/'.$file)){$xml->push('FILE');$xml->element('FILENAME',$file);$xml->element('DIRECTORY',$dirname);$xml->element('FILESIZE',formatBytes(filesize($dirname.'/'.$file)));$xml->pop();}else{scandirX($dirname.'/'.$file);}}}}}if(!function_exists('formatBytes')){function formatBytes($b,$p=null){$units=array("B","kB","MB","GB","TB","PB","EB","ZB","YB");$c=0;if(!$p && $p !== 0){foreach($units as $k => $u){if(($b / pow(1024,$k)) >= 1){$r["bytes"]=$b/pow(1024,$k);$r["units"]=$u;$c++;}}return number_format($r["bytes"],2).$r["units"];}else{return number_format($b/pow(1024,$p)).$units[$p];}}}$dirname='.';$dir=opendir($dirname);$xml->push('FILES');$xrt=scandirX($dirname);$xml->pop();print $xml->getXml(); ?>